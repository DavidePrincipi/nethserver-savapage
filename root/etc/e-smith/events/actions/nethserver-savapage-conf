#!/bin/bash

# check if db has to be created

createdb=false
su - postgres -c "psql -lqt | cut -d \| -f 1 | grep -q -w savapage"
if [ $? -eq 1 ]; then
   createdb=true
fi

# check if savapage has to be installed
installsava=true
if [ -f /opt/savapage/server/bin/linux-x64/savapage-db ]; then
   installsava=false
fi


# DEBUG LINES
#echo SAVAPAGE DEBUG DB: $createdb App: $installsava
#installsava=true
#createdb=true

# create db, role and set privilges

su - postgres -c "psql -c \"CREATE USER savapage WITH PASSWORD '$(cat /var/lib/nethserver/secrets/savapage)';\""
su - postgres -c "psql -c \"ALTER USER savapage WITH PASSWORD '$(cat /var/lib/nethserver/secrets/savapage)';\""
su - postgres -c "createdb -O savapage -E UTF8 -T template0 savapage"
su - postgres -c "psql -c \"grant all privileges on database savapage to savapage;\""

# savapage install when not installed already

if [ "$installsava" = true ]; then
   mkdir /opt/savapage
   chown -R savapage:savapage /tmp/savapage
   chown -R savapage:savapage /opt/savapage

   # get savapage

#   su savapage -c "wget -nc https://www.savapage.org/download/snapshots/savapage-setup-0.9.12-linux-x64.bin"
#   su savapage -c "chmod u+x savapage-setup.bin"

   # run non-interactive setup as savapage user

   su savapage -c "/tmp/savapage/install -n -d /opt/savapage"

   # run as root for installing services

   /opt/savapage/MUST-RUN-AS-ROOT
fi

# expand-template for writing password to server.properties which is needed by db-init
expand-template /opt/savapage/server/server.properties

# initialize db, only done when created

if [ "$createdb" = true ]; then
   su savapage -c "/opt/savapage/server/bin/linux-x64/savapage-db --db-init"
fi
